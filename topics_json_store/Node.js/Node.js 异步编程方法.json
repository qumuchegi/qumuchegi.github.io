{"title":"Node.js 异步编程方法","articleTopic":"Node.js","content":"node 的异步编程方案有以下方法：\n\n \n\n1）Nodejs 定义的回调 API 如文件异步读取，该模式使用 **CPS 连续传递风格**，即将回调作为参数传递给另一个函数，当异步操作完成时，把结果传递给回调并调用这个回调函数，实际上这种 CPS 风格并不总是与异步相关，分为同步CPS和异步CPS）；\n\n \n\n2）事件类（发射-监听）；\n\n \n\n3）ES2015+的promise（及其语法糖 async-await）、generator；\n\n \n\n4）使用异步控制流库，可以避免回调地狱\n\n        如 `async`：npm  https://www.npmjs.com/package/async\n\n        文档 https://caolan.github.io/async/\n\n        async 方法举例：\n\n\n\n\n        如async.series()可以顺序执行传入的任务，而async.waterfall()不仅可以顺序执行，与series的区别是还可以将每  一个任务的输出结果作为下一个任务的输入,顺序执行流还有许多其他的方法可以使用。如果是并行执行可以用async.parallel()、async.parallelLimit()等等。"}